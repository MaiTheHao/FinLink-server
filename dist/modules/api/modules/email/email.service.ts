import { Injectable, BadRequestException } from '@nestjs/common';
import { MailerService } from '@nestjs-modules/mailer';
import { createServerUrl } from 'src/common/utils/network.util';

@Injectable()
export class EmailService {
	constructor(private readonly mailer: MailerService) {}

	async sendVerificationEmail(email: string, token: string) {
		const FRONTEND_URL = process.env.NODE_ENV === 'production' ? process.env.FRONTEND_URL : createServerUrl();
		if (!FRONTEND_URL) {
			throw new BadRequestException('Ch∆∞a c·∫•u h√¨nh FRONTEND_URL trong bi·∫øn m√¥i tr∆∞·ªùng');
		}

		const verificationLink = `${FRONTEND_URL}/auth/verify-email?token=${token}&email=${email}`;

		try {
			await this.mailer.sendMail({
				to: email,
				subject: 'üîí X√°c th·ª±c email - FinLink',
				text: `Vui l√≤ng x√°c th·ª±c email c·ªßa b·∫°n b·∫±ng li√™n k·∫øt sau: ${verificationLink}`,
				html: `
				  <div style="font-family: sans-serif; padding: 20px;">
					<h2>X√°c th·ª±c email c·ªßa b·∫°n</h2>
					<p>Xin ch√†o <strong>${email}</strong>,</p>
					<p>Vui l√≤ng nh·∫•n v√†o li√™n k·∫øt b√™n d∆∞·ªõi ƒë·ªÉ x√°c th·ª±c ƒë·ªãa ch·ªâ email c·ªßa b·∫°n:</p>
					<a href="${verificationLink}" style="display: inline-block; background: #4CAF50; color: white; padding: 10px 15px; border-radius: 5px; text-decoration: none;">
					  X√°c th·ª±c email
					</a>
					<p style="margin-top: 20px;">N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëi·ªÅu n√†y, h√£y b·ªè qua email n√†y.</p>
				  </div>
				`,
			});
		} catch (err) {
			throw new BadRequestException('G·ª≠i email x√°c th·ª±c th·∫•t b·∫°i');
		}
	}

	async sendPasswordResetEmail(email: string, token: string) {
		const FRONTEND_URL = process.env.NODE_ENV === 'production' ? process.env.FRONTEND_URL : createServerUrl();
		if (!FRONTEND_URL) {
			throw new BadRequestException('Ch∆∞a c·∫•u h√¨nh FRONTEND_URL trong bi·∫øn m√¥i tr∆∞·ªùng');
		}
		const resetLink = `${FRONTEND_URL}/auth/verify-reset-password?token=${token}&email=${email}`;

		try {
			await this.mailer.sendMail({
				to: email,
				subject: 'üîí ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - FinLink',
				text: `ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u c·ªßa b·∫°n b·∫±ng li√™n k·∫øt sau: ${resetLink}`,
				html: `
				  <div style="font-family: sans-serif; padding: 20px;">
					<h2>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
					<p>Xin ch√†o <strong>${email}</strong>,</p>
					<p>Vui l√≤ng nh·∫•n v√†o li√™n k·∫øt b√™n d∆∞·ªõi ƒë·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u:</p>
					<a href="${resetLink}" style="display: inline-block; background: #4CAF50; color: white; padding: 10px 15px; border-radius: 5px; text-decoration: none;">
					  ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
					</a>
					<p style="margin-top: 20px;">N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒëi·ªÅu n√†y, h√£y b·ªè qua email n√†y.</p>
				  </div>
				`,
			});
		} catch (err) {
			throw new BadRequestException('G·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u th·∫•t b·∫°i');
		}
	}
}
